const fs = require("fs");
const { sendMessage } = require("./services/slackMessages");
const { sendFile } = require("./services/slackFiles");
const { sendBuffersAsPost } = require("./services/slackPosts");
const { getUserToken } = require("./services/slackAuth");

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
(async () => {
  try {
    // await sendMessage("Hello Slack Bot! üöÄ");

    // await sendFile("./assets/1.jpg", "üöÄüöÄ");
    const buffers = [
      { buffer: fs.createReadStream("./assets/1.jpg") },
      { buffer: fs.createReadStream("./assets/2.jpg") },
      { buffer: fs.createReadStream("./assets/3.jpg") },
      { buffer: fs.createReadStream("./assets/4.jpg") },
      { buffer: fs.createReadStream("./assets/5.jpg") },
      { buffer: fs.createReadStream("./assets/6.jpg") },
      { buffer: fs.createReadStream("./assets/7.jpg") },
      { buffer: fs.createReadStream("./assets/8.jpg") },
      { buffer: fs.createReadStream("./assets/9.jpg") },
      { buffer: fs.createReadStream("./assets/10.jpg") },
    ];
    const postData = {
      title:
        "üì∞ –ó–µ–ª–µ–Ω—Å—å–∫–∏–π –ø—ñ–¥—Ç—Ä–∏–º—É—î –¢—Ä–∞–º–ø–∞ —â–æ–¥–æ –µ–Ω–µ—Ä–≥–µ—Ç–∏—á–Ω–∏—Ö —Å–∞–Ω–∫—Ü—ñ–π –ø—Ä–æ—Ç–∏ –†–æ—Å—ñ—ó",
      uaLink:
        "https://mezha.net/ua/bukvy/zelensky-supports-trump-s-energy-sanctions-on-russia-amid-global-tensions/",
      enLink:
        "https://mezha.net/eng/bukvy/zelensky-supports-trump-s-energy-sanctions-on-russia-amid-global-tensions/",
      bannerUrl:
        "https://mezha.net/wp-content/uploads/2025/09/09/the-president-of-ukraine.webp",
      shortDescription:
        "–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç –£–∫—Ä–∞—ó–Ω–∏ –ó–µ–ª–µ–Ω—Å—å–∫–∏–π –ø—ñ–¥—Ç—Ä–∏–º–∞–≤ –ø–æ–∑–∏—Ü—ñ—é –¢—Ä–∞–º–ø–∞ —â–æ–¥–æ —Ä–æ–∑—ñ—Ä–≤–∞–Ω–Ω—è –µ–Ω–µ—Ä–≥–µ—Ç–∏—á–Ω–∏—Ö —É–≥–æ–¥ –∑ –†–æ—Å—ñ—î—é —Ç–∞ –∑–∞–∫–ª–∏–∫–∞–≤ –¥–æ –ø–æ–≤–Ω–æ—ó –≤—ñ–¥–º–æ–≤–∏ –≤—ñ–¥ —Ä–æ—Å—ñ–π—Å—å–∫–∏—Ö –µ–Ω–µ—Ä–≥–æ–Ω–æ—Å—ñ—ó–≤ –¥–ª—è –ø–æ—Å–∏–ª–µ–Ω–Ω—è —Ç–∏—Å–∫—É –Ω–∞ –ü—É—Ç—ñ–Ω–∞.",
      callToAction: "üìå –û–±–µ—Ä—ñ—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ —Ä–µ–ø–ª–∞—è—Ö –Ω–∏–∂—á–µ üëá",
    };
    await sendBuffersAsPost(postData, buffers);

    const userToken = await getUserToken();
    console.log("üé´ User token:", userToken);
  } catch (err) {
    console.error("Error –≤ index.js:", err);
  }
})();
