const { WebClient } = require("@slack/web-api");
const fs = require("fs");
require("dotenv").config();

const token = process.env.SLACK_BOT_TOKEN;
const channelID = process.env.SLACK_CHANNEL_ID; // ID –∫–∞–Ω–∞–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä

const web = new WebClient(token);

// === –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ===
async function sendMessage(text) {
  try {
    await web.chat.postMessage({ channel: channelID, text });
    console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: "${text}"`);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err.data || err);
  }
}

// === –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º ===
async function sendFile(filePath, comment = "") {
  try {
    if (!fs.existsSync(filePath)) {
      console.error("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:", filePath);
      return;
    }

    const filename = filePath.split("/").pop();

    const resp = await web.files.uploadV2({
      file: fs.createReadStream(filePath),
      filename,
      initial_comment: comment,
      channel_id: channelID,
    });

    if (resp.ok) {
      console.log(`‚úÖ –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${filename} (–∫–æ–º–º–µ–Ω—Ç: "${comment}")`);
    } else {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞:", resp.error);
    }
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞:", err.data || err);
  }
}

// === –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö ===
async function sendMultipleFiles(filePaths, mainComment = "–§–∞–π–ª—ã:") {
  // –°–æ–∑–¥–∞—ë–º –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º
  const thread_ts = await sendMessage(mainComment);

  for (const filePath of filePaths) {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –≤ –æ–¥–∏–Ω —Ç—Ä–µ–¥
    await sendFile(filePath, thread_ts);
  }
}

// === –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ ===
async function sendImagesAsPost(urls, text = "–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ:") {
  try {
    const blocks = [{ type: "section", text: { type: "mrkdwn", text } }];

    for (const url of urls) {
      blocks.push({ type: "image", image_url: url, alt_text: "–§–æ—Ç–æ" });
    }

    await web.chat.postMessage({ channel: channelID, blocks });
    console.log("‚úÖ –ü–æ—Å—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω");
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞ —Å —Ñ–æ—Ç–æ:", err.data || err);
  }
}

// === –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ===
// (async () => {
//   // –ü—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
//   await sendMessage("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üöÄ");

//   // –¢–µ–∫—Å—Ç + —Ñ–æ—Ç–æ
//   await sendFile("./test.png", "–°–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–µ —Å —Ñ–æ—Ç–æ");

//   // –¢–æ–ª—å–∫–æ —Ñ–æ—Ç–æ
//   await sendFile("./test.png");

//   // –ù–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ
//   const photos = ["./test.png", "./test2.png", "./test3.png"];
//   await sendMultipleFiles(photos, "–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–æ—Ç–æ");
// })();

// (async () => {
//   const urls = [
//     "https://mezha.net/wp-content/uploads/2025/09/08/notice-of-suspicion-for.webp",
//     "https://mezha.net/wp-content/uploads/2025/09/08/police-in-the-czech.webp",
//     "https://mezha.net/wp-content/uploads/2025/09/08/president-trump-is-expected.webp",
//   ];
//   await sendImagesAsPost(urls, "–ù–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏!!!!");
// })();
