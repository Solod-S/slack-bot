const { web } = require("./slackMessages");
const { channelID } = require("../config/slackConfig");

// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ —Å –±–ª–æ–∫–∞–º–∏ –∏ –±—É—Ñ–µ—Ä–∞–º–∏ (–≤ —Ä–µ–ø–ª–∞—è—Ö —Ñ–∞–π–ª—ã)
async function sendBuffersAsPost(content, buffers) {
  try {
    const blocks = [
      {
        type: "image",
        image_url: content.bannerUrl,
        alt_text: "–ë–∞–Ω–µ—Ä —Å—Ç–∞—Ç—Ç—ñ",
      },
      {
        type: "section",
        text: {
          type: "mrkdwn",
          text: `*${content.title}*\n\n${content.shortDescription}`,
        },
      },
      {
        type: "section",
        text: {
          type: "mrkdwn",
          text: `üìñ –î–æ—Å—Ç—É–ø–Ω—ñ –≤–µ—Ä—Å—ñ—ó —Å—Ç–∞—Ç—Ç—ñ:\n‚Ä¢ <${content.uaLink}|üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≤–µ—Ä—Å—ñ—è>\n‚Ä¢ <${content.enLink}|üåê English version>`,
        },
      },
      {
        type: "context",
        elements: [
          {
            type: "mrkdwn",
            text: `üí° ${content.callToAction}`,
          },
        ],
      },
    ];

    // –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Å—Ç
    const mainMessage = await web.chat.postMessage({
      channel: channelID,
      text: content.title,
      blocks,
      unfurl_links: false,
      unfurl_media: false,
    });

    const thread_ts = mainMessage.ts;

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç—Ä–µ–¥
    for (let i = 0; i < buffers.length; i++) {
      const resp = await web.files.uploadV2({
        file: buffers[i].buffer,
        filename: `image_${Date.now()}_${i}.png`,
        channel_id: channelID,
        thread_ts,
      });

      if (!resp.ok) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:", resp.error);
      }
    }

    console.log("‚úÖ –ü–æ—Å—Ç —Å –±—É—Ñ–µ—Ä–∞–º–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ —Ä–µ–ø–ª–∞—è—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω");
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –≤ sendBuffersAsPost:", err.data || err);
  }
}

module.exports = { sendBuffersAsPost };
